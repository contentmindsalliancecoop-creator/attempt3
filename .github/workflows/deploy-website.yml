name: Deploy Website to Firebase Hosting

# El disparador: se ejecuta cuando un release es publicado.
on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Clona tu repositorio para tener acceso a los archivos.
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Reemplaza el placeholder en index.html con el enlace del nuevo release.
      
      - name: Get APK URL
        id: get_apk
        run: |
          url=$(echo '${{ toJson(github.event.release.assets) }}' \
            | jq -r '.[] | select(.name | endswith(".apk")) | .browser_download_url')
          if [ -z "$url" ] || [ "$url" = "null" ]; then
            echo "No se encontrÃ³ un asset .apk en este release." >&2
            exit 1
          fi
          echo "url=$url" >> "$GITHUB_OUTPUT"

      # 2) Reemplazar el placeholder en index.html
      - name: Update index.html with APK URL
        run: |
          sed -i "s|--APK-DOWNLOAD-LINK--|${{ steps.get_apk.outputs.url }}|" public/index.html
          echo "Reemplazado por: ${{ steps.get_apk.outputs.url }}"
          grep -n "APK" -n public/index.html || true

      # 3. Instala Node.js, necesario para las herramientas de Firebase.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 4. Instala las herramientas de Firebase.
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # 5. Despliega a Firebase Hosting usando el Token que guardaste.
      - name: Deploy to Firebase
        run: firebase deploy --only hosting --token "${{ secrets.FIREBASE_TOKEN }}" --non-interactive